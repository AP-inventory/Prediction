import random
import pandas as pd

# Define the resource categories and their counts
resource_categories = {
    "Specialist": 4,
    "Senior Analyst": 6,
    "Analyst": 6,
    "Associate": 4
}

# Create a list of resource names based on categories
resources = []
for category, count in resource_categories.items():
    resources.extend([f"{category} {i+1}" for i in range(count)])

# Load historical shift data from the last three months
historical_shift_data = pd.DataFrame()

# Define file paths for historical data
file_paths = ['path_to_file_month1.xlsx', 'path_to_file_month2.xlsx', 'path_to_file_month3.xlsx']

# Read data from each file and combine into historical_shift_data DataFrame
for file_path in file_paths:
    df = pd.read_excel(file_path)
    historical_shift_data = historical_shift_data.append(df, ignore_index=True)

# Define the number of days in the upcoming month
days_in_month = 30  # Adjust as needed

# Initialize an empty roster for the next month
next_month_roster = {resource: [] for resource in resources}

# Generate a random roster for the next month based on historical data (simplified example)
for day in range(1, days_in_month + 1):
    # Shuffle the list of resources to randomize assignments
    random.shuffle(resources)
    
    # Assign resources to shifts for the day based on historical data
    # (You would replace this with your prediction models)
    for resource in resources:
        # Check historical data to make assignments based on past shifts (simplified random assignment)
        if resource in historical_shift_data.columns:
            past_shifts = historical_shift_data[resource].tolist()
            if past_shifts.count(day) < 3:  # Allow assigning a maximum of 3 shifts per day
                next_month_roster[resource].append(day)

# Print the generated roster for the next month
for resource, shifts in next_month_roster.items():
    print(f"{resource}: {shifts}")
